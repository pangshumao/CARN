
def calRF(net, layerNum):
    rf = 1
    for layer in reversed(range(layerNum)):
        filterSize, stride = net[layer]
        rf = (rf - 1) * stride + filterSize
    return rf

if __name__ == '__main__':
    # list of [filter_size, stride]
    carn_net = [[7, 2], [3, 1], [2, 2], [3, 1], [2, 2], [3, 1], [2, 2], [3, 1], [2, 2],
                  [3, 1], [2, 2], [3, 1], [1, 1], [4, 4]]
    res34 = [[7, 2], [2, 2], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1],
                  [3, 2], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1],
                  [3, 2], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1],
                  [3, 2], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1]]
    res18 = [[7, 2], [3, 2],  # C1, 2
             [3, 1], [3, 1], [3, 1], [3, 1],  # C2, 6, 43
             [3, 2], [3, 1], [3, 1], [3, 1],  # C3, 10, 99
             [3, 2], [3, 1], [3, 1], [3, 1],  # C4, 14, 211
             [3, 2], [3, 1], [3, 1], [3, 1]]  # C5, 18, 435
    res50 = [[7, 2], [3, 2],  # C1, 2
             [1, 1], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1],  # C2, 11, 35
             [1, 2], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1],  # C3, 23, 99
             [1, 2], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1],  # C4, 41, 291
             [1, 2], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1], [1, 1], [3, 1], [1, 1]]  # C5, 50, 483
    layerNum = 34
    rf = calRF(res34, layerNum)
    print('layer: %d, receptive field: %d' % (layerNum, rf))